description: Provides the ability to select a plugin and an optional API to bind it to for configuration.
$type: div
children:
  $type: HeaderPage
  props:
    title: New Plugin
  children:
    - $type: Panel
      props:
        inset: true
      children:
        $type: Provider
        props:
          mapper:
            $mapper: |
              (()=>{
                const {
                  plugins,
                  apis
                } = props;
                if(Array.isArray(plugins) && Array.isArray(apis)){
                  return Object.assign({}, props, {
                    schema: {
                      fields: {
                        api: {
                          type: 'string',
                          enum: ['[global]', ...apis.map(api=>api.name)],
                          default: '[global]'
                        },
                        pluginType: {
                          type: 'string',
                          enum: plugins,
                          required: true
                        }
                      }
                    }
                  });
                }
                return props;
              })();
          provide:
            apis:
              url: /api/kong/apis
              root: data
            plugins:
              url: /api/kong/plugins/enabled
              root: enabled_plugins
          Component:
            $component: KongForm
          props:
            successUrl:
              $mapper: |
                props.api!=='[global]'?`/kong/api/${props.api}/plugin/${props.pluginType}`:`/kong/plugin/${props.pluginType}`
path: /kong/plugin
