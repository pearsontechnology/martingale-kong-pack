description: Provides a listing of all configured plugins.
$type: DataViewPage
props:
  title: Plugins
  provide:
    apis:
      url: /api/kong/apis
      root: data
    plugins:
      url: /api/kong/plugins
      root: data
  mapper:
    $mapper: |
      (()=>{
        const {
          apis,
          plugins
        } = props || {};
        if(Array.isArray(apis) && Array.isArray(plugins)){
          const newData = plugins.map((row)=>{
            if(row.api_id){
              const api = apis.find((api)=>api.id === row.api_id);
              if(api){
                return Object.assign({api: api.name||row.api_id}, row);
              }
            }
            return row;
          });
          return Object.assign({}, props, {data: newData});
        }
        return props;
      })();
  footer:
    $type: Link
    props:
      caption: New
      className: btn btn-primary
      to:
        $map: '`/kong/plugin`'
  suppress:
    - api_id
    - id
    - enabled
    - config
  actions:
    - caption: Edit
      link: /kong/plugin/${name}/${id}
      btnStyle: primary
    - caption: Delete
      delete: /api/kong/plugins/${id}
      message: 'Are you sure you want to delete "${name}"?'
    - caption: ${enabled?'Disable':'Enable'}
      btnStyle: ${enabled?'warning':'success'}
      title: Disable ${name}
      message: ${enabled?(typeof(api)!=='undefined'?'Are you sure you want to disable plugin "'+name+'" for "'+api+'"?':'Are you sure you want to disable plugin "'+name+'" globally?'):''}
      fetch:
        url: /api/kong/plugins/${id}
        method: patch
        payload:
          enabled: ${!enabled}
icon: Plugin
sideNav: true
caption: Plugins
path: /kong/plugins
